pipeline {
   agent {
       node {
           label 'qeff_node'
       }
   }
   options {
        disableConcurrentBuilds()
    }

   stages {
       stage('Install QEfficient') {
           steps {
               sh '''
                   . ~/.bashrc
                   sudo docker run --privileged -dit --name ${BUILD_TAG} -e HF_TOKEN=${HF_TOKEN} -v ./:/efficient-transformers -v ${HF_PATH}:${DOCKER_HF_PATH} ${DOCKER_LATEST}:master_latest
                   sudo docker exec ${BUILD_TAG} bash -c "
                   cd /efficient-transformers &&
                   apt update &&
                   apt install -y python3.10-venv &&
                   python3.10 -m venv preflight_qeff &&
                   . preflight_qeff/bin/activate &&
                   pip install --upgrade pip setuptools &&
                   pip install .[test] &&
                   pip install junitparser pytest-xdist &&
                   pip install librosa==0.10.2 soundfile==0.13.1 && #packages needed to load example for whisper testing
                   pip install --extra-index-url https://download.pytorch.org/whl/cpu timm==1.0.14 torchvision==0.19.1+cpu einops==0.8.1 && #packages to load VLMs
                   pip install /opt/qti-aic/integrations/torch_qaic/py310/torch_qaic-0.1.0-cp310-cp310-linux_x86_64.whl && # For finetuning tests
                   rm -rf QEfficient"
               '''
           }
       }
    }

    post {
        success {
            // Trigger downstream job only if this pipeline succeeds
            build job: 'qefficient_vllm_upstream',
                parameters: [string(name: 'NAME', value: "${BUILD_TAG}")],
                wait: false
        }
        always {
            // script {
            //     try {
            //         sh '''
            //         sudo docker rm -f ${BUILD_TAG}
            //         sudo chown -R ubuntu .
            //         '''
            //     } catch (error) {
            //         echo "Failed to delete container ${BUILD_TAG}: ${error}"
            //     }
            // }
            junit testResults: 'tests/tests_log.xml'
            // echo 'Cleaning Workspace'
            // deleteDir()
        }
    }
}